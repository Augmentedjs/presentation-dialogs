{"version":3,"sources":["webpack://presentation-dialogs/webpack/universalModuleDefinition","webpack://presentation-dialogs/webpack/bootstrap","webpack://presentation-dialogs/external {\"commonjs\":\"presentation-decorator\",\"commonjs2\":\"presentation-decorator\",\"amd\":\"presentation-decorator\",\"root\":\"presentation-decorator\"}","webpack://presentation-dialogs/./src/dialog/dialog.js","webpack://presentation-dialogs/./src/dialog/confirmation.js","webpack://presentation-dialogs/./src/dialog/alert.js","webpack://presentation-dialogs/./src/notification/notify.js","webpack://presentation-dialogs/./src/splash/splash.js","webpack://presentation-dialogs/./src/dialog/error.js","webpack://presentation-dialogs/./src/dialog/message.js","webpack://presentation-dialogs/./src/dialog/about.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DialogView","DecoratorView","constructor","options","super","title","_title","body","_body","style","_style","buttons","_buttons","_isOpen","render","el","injectTemplate","_template","trigger","cancel","event","close","open","removeTemplate","_getButtonGroup","html","keys","length","ConfirmationDialogView","yes","no","AlertDialogView","Notification","tagName","timeOut","that","to","setTimeout","classList","add","remove","Splash","figureStyle","template","subTitle","subSubTitle","ErrorDialogView","MessageDialogView","AboutDialogView","description","author","version","website"],"mappings":"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","file":"presentation-dialogs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"presentation-decorator\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-dialogs\", [\"presentation-decorator\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-dialogs\"] = factory(require(\"presentation-decorator\"));\n\telse\n\t\troot[\"presentation-dialogs\"] = factory(root[\"presentation-decorator\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import { DecoratorView } from \"presentation-decorator\";\n\n/**\n * A automatic dialog view - creates a dialog with simple configurations to customize</br/>\n * supports title, body, style, and buttons as options<br/>\n * buttons are defined as an object with key as name, value as function to call\n * @param {Object} options Options to pass to the class\n * @extends DecoratorView\n */\nclass DialogView extends DecoratorView {\n  constructor(options) {\n    super(options);\n    if (!this.name) {\n      this.name = \"dialog\";\n    }\n    if (options && options.title) {\n      this._title = options.title;\n    } else {\n      this._title = \"\";\n    }\n    if (options && options.body) {\n      this._body = options.body;\n    } else {\n      this._body = \"\";\n    }\n    if (options && options.style) {\n      this._style = options.style;\n    } else {\n      this._style = \"form\";\n    }\n    if (options && options.buttons) {\n      this._buttons = options.buttons;\n    } else {\n      this._buttons = {};\n    }\n    this._isOpen = false;\n  };\n\n  /**\n   * isOpen property (readonly)\n   * @returns {boolean} true on open\n   * @property isOpen\n   */\n   get isOpen() {\n     return this._isOpen;\n   };\n\n  /**\n   * title property - the title of the dialog\n   * @property title\n   */\n  set title(title) {\n    this._title = title;\n  };\n\n  get title() {\n    return this._title;\n  };\n\n  /**\n   * style property - the style (form, alert, bigForm, or whatever class you want)\n   * @property style\n   */\n  set style(style) {\n    this._style = style;\n  };\n\n  get style() {\n    return this._style;\n  };\n\n  /**\n   * buttons object property - the buttons to match to functions\n   * @property {Object} buttons\n   */\n  set buttons(buttons) {\n    this._buttons = buttons;\n  };\n\n  get buttons() {\n    return this._buttons;\n  };\n\n  /**\n   * Body - sets the body content of the dialog\n   * @property {String} body A string value of th body (supports HTML)\n   */\n  set body(body) {\n    this._body = body;\n  };\n\n  get body() {\n    return this._body;\n  };\n\n  /**\n   * render - render the dialog\n   */\n  render() {\n    if (this.el) {\n      this.injectTemplate(this._template(), this.el);\n      this.trigger(\"open\");\n      this._isOpen = true;\n    }\n    return this;\n  };\n\n  /**\n   * cancel - standard built-in cancel callback.  Calls close method by default\n   * @param {Event} event Event passed in\n   */\n  cancel(event) {\n    return this.close(event);\n  };\n\n  /**\n   * open - standard built-in open callback.  Calls render method by default\n   * @param {Event} event Event passed in\n   */\n  open(event) {\n    return this.render(event);\n  };\n\n  /**\n   * close - standard built-in close callback.  Closes the dialog, triggers the 'close' event\n   * @param {Event} event Event passed in\n   */\n  close(event) {\n    this.trigger(\"close\");\n    this.removeTemplate(this.el, true);\n    this._isOpen = false;\n    return this;\n  };\n\n  /* private methods */\n\n  /**\n   * template - sets content of the dialog, handled internally\n   * @method _template\n   * @private\n   */\n  _template() {\n    return /*html*/`<div class=\"blur\"><dialog class=\"${this._style}\"><h1>${this._title}</h1>${this._body}${this._getButtonGroup()}</dialog></div>`;\n  };\n\n  _getButtonGroup() {\n    let html = /*html*/`<div class=\"buttonGroup\">`, i = 0, keys = Object.keys(this._buttons), l = (keys) ? keys.length: 0;\n    for (i = 0; i < l; i++) {\n      html += /*html*/`<button data-${this.name}=\"${this._buttons[keys[i]]}\" data-click=\"${this._buttons[keys[i]]}\">${keys[i]}</button>`;\n    }\n    return html + \"</div>\";\n  };\n};\n\nexport default DialogView;\n","import DialogView from \"./dialog.js\";\n\n/**\n * A automatic comfirmation dialog view - creates a dialog with yes no buttons\n * @extends DialogView\n */\nclass ConfirmationDialogView extends DialogView {\n  constructor(options) {\n    if (!options) {\n      options = {}\n    };\n    if (!options.buttons) {\n      options.buttons = {};\n    }\n    options.buttons.yes = \"yes\";\n    options.buttons.no = \"no\";\n    if (!options.style) {\n      options.style = \"\";\n    }\n    \n    options.style += \" alert\";\n    super(options);\n  };\n};\n\nexport default ConfirmationDialogView;\n","import DialogView from \"./dialog.js\";\n\n/**\n* A automatic alert dialog view - creates a dialog with cancel button and a message\n* @extends DialogView\n*/\nclass AlertDialogView extends DialogView {\n  constructor(options) {\n    if (!options) {\n      options = {}\n    };\n    if (!options.buttons) {\n      options.buttons = {};\n    }\n    options.buttons.cancel = \"cancel\";\n    if (!options.style) {\n      options.style = \"alert\";\n    } else {\n      options.style = `${options.style} alert`;\n    }\n\n    super(options);\n  };\n};\n\nexport default AlertDialogView;\n","import DialogView from \"../dialog/dialog.js\";\nconst NOTIFY_STYLE = \"notify\";\nconst DEFAULT_TIMEOUT = 2000;\nconst NOTIFY_ANIMATION_CLASS = \"slide\";\n\n/**\n * Notification\n * @param options Options to pass\n * @example options passed are: timeOut, name, style\n * @extends DialogView\n */\nclass Notification extends DialogView {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    };\n\n    if (!options.style) {\n      options.style = NOTIFY_STYLE;\n    } else {\n      options.style = `${options.style} ${NOTIFY_STYLE}`;\n    }\n\n    if (!options.name) {\n      options.name = NOTIFY_STYLE;\n    }\n\n    options.tagName = \"div\";\n\n    options.buttons = {};\n\n    super(options);\n\n    if (options.timeOut) {\n      this.timeOut = options.timeOut;\n    } else {\n      this.timeOut = DEFAULT_TIMEOUT;\n    }\n  };\n\n  /**\n   * template - sets content of the dialog, handled internally\n   * @private\n   */\n  _template() {\n    return `${(this._title) ? \"<h1>\" + this._title + \"</h1>\" : \"\"}${this._body}`;\n  };\n\n  render() {\n    const that = this;\n    const to = this.timeOut;\n\n    setTimeout(function() {\n      const el = that.el;\n      el.classList.add(NOTIFY_ANIMATION_CLASS);\n\n      setTimeout(function() {\n        that.remove();\n        el.remove();\n      }, to);\n    }, (to*2));\n    return super.render();\n  };\n};\n\nexport default Notification;\n","import { DecoratorView } from \"presentation-decorator\";\nconst SPLASH_STYLE = \"splash\";\nconst DEFAULT_TIMEOUT = 2000;\n\n/**\n * Splash Screen View\n * @param options Options to pass\n * @extends DecoratorView\n * @example options passed are: title, subTitle, subSubTitle, name, style, and figureStyle\n */\nclass Splash extends DecoratorView {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.name) {\n      options.name = SPLASH_STYLE;\n    }\n\n    if (!options.style) {\n      options.style = SPLASH_STYLE;\n    } else {\n      options.style = `${options.style} ${SPLASH_STYLE}`;\n    }\n\n    if (!options.title) {\n      options.title = \"Untitled\";\n    }\n\n    if (!options.figureStyle) {\n      options.figureStyle = \"logo_large\";\n    }\n\n    if (!options.template) {\n      options.template = /*html*/`\n        ${ (options.title) ? \"<h1>\" + options.title + \"</h1>\" : \"\" }\n        ${ (options.subTitle) ? \"<h2>\" + options.subTitle + \"</h2>\" : \"\" }\n        ${ (options.subSubTitle) ? \"<h3>\" + options.subSubTitle + \"</h3>\" : \"\" }\n        <figure class=\"${options.figureStyle}\"></figure>\n      `;\n    }\n\n    super(options);\n\n    if (options.timeOut) {\n      this.timeOut = options.timeOut;\n    } else {\n      this.timeOut = DEFAULT_TIMEOUT;\n    }\n  };\n\n  render() {\n    const that = this;\n    const to = this.timeOut;\n\n    setTimeout(function() {\n      const el = that.el;\n      el.classList.add(\"fade\");\n\n      setTimeout(function() {\n        that.remove();\n        el.remove();\n      }, to);\n    }, (to*2));\n    return super.render();\n  };\n};\n\nexport default Splash;\n","import AlertDialogView  from \"./alert.js\";\n\n/**\n * A automatic error dialog view - creates a dialog ok button\n * @extends AlertDialogView\n */\nclass ErrorDialogView extends AlertDialogView {\n  constructor(options) {\n    if (!options) {\n      options = {}\n    };\n    if (!options.buttons) {\n      options.buttons = {};\n   } \n    options.buttons.cancel = \"ok\";\n    if (!options.style) {\n       options.style = \"\";\n    }\n      \n    options.style += \" error alert\";\n    if (!options.title) {\n      options.title = \"An Error Occurred! 😞\"\n    }\n    super(options);\n  };\n};\n\nexport default ErrorDialogView;\n","import AlertDialogView  from \"./alert.js\";\n\n/**\n * A automatic message dialog view - creates a dialog ok button\n * @extends AlertDialogView\n */\nclass MessageDialogView extends AlertDialogView {\n  constructor(options) {\n    if (!options) {\n      options = {}\n    };\n    if (!options.buttons) {\n      options.buttons = {};\n    }\n    options.buttons.cancel = \"ok\";\n    if (!options.style) {\n      options.style = \"alert\";\n    } else {\n      options.style = `${options.style} alert`;\n    }\n\n    super(options);\n  };\n};\n\nexport default MessageDialogView;\n","import DialogView from \"./dialog.js\";\n\n/**\n* A automatic about dialog view - creates a dialog with cancel button and a message.<br/>\n* Pass the following options for pre-formated dialog:\n* <ul>\n* <li>description</l1>\n* <li>author</l1>\n* <li>version</l1>\n* <li>website</l1>\n* </ul>\n* <em>* for preformated, do not pass 'body' option</em>\n* @extends DialogView\n*/\nclass AboutDialogView extends DialogView {\n  constructor(options) {\n    if (!options) {\n      options = {}\n    };\n    if (!options.buttons) {\n      options.buttons = {};\n    }\n    options.buttons.cancel = \"cancel\";\n    if (!options.style) {\n      options.style = \"bigForm about\";\n    } else {\n      options.style = `${options.style} about`;\n    }\n\n    if (!options.name) {\n      options.name = \"about\";\n    }\n\n    if (!options.body && (options.description && options.author && options.version && options.website)) {\n      options.body = /*html*/`\n        <h2>${options.description}</h2>\n        <h3>Version ${options.version}</h3>\n        <p class=\"author\">Written by ${options.author}</p>\n        <p class=\"website\">${options.website}</p>\n        <figure class=\"logo\"></figure>\n      `;\n    }\n\n    if (!options.title) {\n      options.title = \"About\";\n    }\n\n    super(options);\n  };\n};\n\nexport default AboutDialogView;\n"],"sourceRoot":""}